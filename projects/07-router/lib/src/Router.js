import{jsx as _jsx}from"react/jsx-runtime";import React,{Children}from"react";import{EVENTS}from"./consts";import{useState,useEffect}from"react";import{match}from"path-to-regexp";import{getCurrentPath}from"./utils/getCurrentPath";export function Router({children,routes=[],defaultComponent:DefaultComponent=()=>_jsx("h1",{children:"Error 404"})}){const[currentPath,SetCurrentPath]=useState(getCurrentPath());useEffect(()=>{const onLocationChange=()=>{SetCurrentPath(getCurrentPath())};window.addEventListener(EVENTS.PUSHSTATE,onLocationChange);window.addEventListener(EVENTS.POPSTATE,onLocationChange);return()=>{window.removeEventListener(EVENTS.PUSHSTATE,onLocationChange);window.removeEventListener(EVENTS.POPSTATE,onLocationChange)}},[]);let routeParams={};const routesFromChildren=Children.map(children,({props,type})=>{const{name}=type;const isRoute=name==="Route";return isRoute?props:null});const routesToUse=routes.concat(routesFromChildren).filter(Boolean);const Page=routesToUse.find(({path})=>{if(path===currentPath)return true;const matcherUrl=match(path,{devode:decodeURIComponent});const matched=matcherUrl(currentPath);if(!matched)return false;routeParams=matched.params;return true})?.Component;return Page?_jsx(Page,{routeParams:routeParams}):_jsx(DefaultComponent,{})}